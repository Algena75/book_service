version: '3.9'

services:
  db:
    image: postgres:13.0-alpine
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    expose:
      - 5432
    env_file:
      - .env.example

  web:
    image: algena75/book_service_web:latest
    # build:
    #   context: .
    #   dockerfile: ./docker/web.Dockerfile
    container_name: web
    entrypoint: ./server-entrypoint.sh
    ports:
      - 8000:8000
    depends_on:
      - db
    env_file:
      - .env.example
    environment:
      - POSTGRES_SERVER=db
      - RABBITMQ_HOST=rabbitmq
    volumes:
      - ./web:/app/web

  grpc_server:
    image: algena75/book_service_grpc:latest
    # build:
    #   context: .
    #   dockerfile: ./docker/gRPC.Dockerfile
    container_name: grpc_server
    ports:
      - 50051:50051
    depends_on:
      - db
      - rabbitmq
    env_file:
      - .env.example
    environment:
      - POSTGRES_SERVER=db
      - RABBITMQ_HOST=rabbitmq
    volumes:
      - ./grpc_service:/app/grpc_service

  nginx:
    restart: always
    image: nginx:1.23-alpine
    ports:
      - 80:80
    depends_on:
      - web
    volumes:
      - ./docker/default.conf:/etc/nginx/conf.d/default.conf

  rabbitmq:
    image: rabbitmq:4-management
    hostname: rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    depends_on:
      - web
    env_file:
      - .env.example


volumes:
  postgres_data: {}
