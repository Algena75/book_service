name: Bookservice test task workflow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    services:
      postgres:
        image: postgres

        env:
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_DB: postgres

        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        ports:
          - "5432:5432"

      rabbitmq:
        image: rabbitmq
        env:
          RABBITMQ_DEFAULT_USER: guest
          RABBITMQ_DEFAULT_PASS: guest
        ports:
          - "5672:5672"
          

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1

    - name: Validate the structure of the pyproject.toml
      run: |
        poetry check

    - name: Verify that poetry.lock is consistent with pyproject.toml
      run: |
        poetry check --lock

    - name: Install dependencies
      run: |
        poetry install --with test

    - name: Test with flake8 and pytest
      env:
        DATABASE_URL: 'postgresql+asyncpg://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/postgres'
        RABBITMQ_PORT: ${{ job.services.rabbitmq.ports[5672] }}
      run: |
        poetry run flake8
        poetry run pytest
